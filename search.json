[{"path":"https://mikmart.github.io/mire/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 mire authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mikmart.github.io/mire/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mikko Marttila. Author, maintainer.","code":""},{"path":"https://mikmart.github.io/mire/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marttila M (2023). mire: Mikko's Miscellaneous R Extensions. https://github.com/mikmart/mire, https://mikmart.github.io/mire/.","code":"@Manual{,   title = {mire: Mikko's Miscellaneous R Extensions},   author = {Mikko Marttila},   year = {2023},   note = {https://github.com/mikmart/mire, https://mikmart.github.io/mire/}, }"},{"path":"https://mikmart.github.io/mire/index.html","id":"mire","dir":"","previous_headings":"","what":"Mikko's Miscellaneous R Extensions","title":"Mikko's Miscellaneous R Extensions","text":"mire collects miscellaneous R extensions make author’s experience using R little bit pleasant.","code":""},{"path":"https://mikmart.github.io/mire/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Mikko's Miscellaneous R Extensions","text":"can install development version mire GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mikmart/mire\")"},{"path":"https://mikmart.github.io/mire/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Mikko's Miscellaneous R Extensions","text":"let() function (inspired Haskell’s let expression) can used sequentially declare local variables evaluating expression:","code":"library(mire)  let(x = 2, y = x + 3, y * y) #> [1] 25"},{"path":"https://mikmart.github.io/mire/reference/batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a batch indicator for splitting an object — batch","title":"Create a batch indicator for splitting an object — batch","text":"generic function create indicator splitting object n batches, batches given size. data.frame method batches rows.","code":""},{"path":"https://mikmart.github.io/mire/reference/batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a batch indicator for splitting an object — batch","text":"","code":"batch(x, n = NULL, size = NULL, ..., balance = !is.null(n))  # S3 method for data.frame batch(x, n = NULL, size = NULL, ..., balance = !is.null(n))"},{"path":"https://mikmart.github.io/mire/reference/batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a batch indicator for splitting an object — batch","text":"x vector data frame. n integer. number batches create. size integer. size batches create. ... Arguments passed methods. balance Logical. batch sizes (approximately) balanced?","code":""},{"path":"https://mikmart.github.io/mire/reference/batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a batch indicator for splitting an object — batch","text":"integer vector suitable use index split() object .","code":""},{"path":"https://mikmart.github.io/mire/reference/batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a batch indicator for splitting an object — batch","text":"","code":"batch(LETTERS, 8) #>  [1] 1 1 1 1 2 2 2 2 3 3 3 4 4 4 5 5 5 6 6 6 7 7 7 8 8 8 batch(LETTERS, size = 8) #>  [1] 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 4 4 batch(LETTERS, size = 8, balance = TRUE) #>  [1] 1 1 1 1 1 1 1 2 2 2 2 2 2 2 3 3 3 3 3 3 4 4 4 4 4 4  # The data.frame method batches rows split(iris, batch(iris, 2)) |> str() #> List of 2 #>  $ 1:'data.frame':\t75 obs. of  5 variables: #>   ..$ Sepal.Length: num [1:75] 5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ... #>   ..$ Sepal.Width : num [1:75] 3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ... #>   ..$ Petal.Length: num [1:75] 1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ... #>   ..$ Petal.Width : num [1:75] 0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ... #>   ..$ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ... #>  $ 2:'data.frame':\t75 obs. of  5 variables: #>   ..$ Sepal.Length: num [1:75] 6.6 6.8 6.7 6 5.7 5.5 5.5 5.8 6 5.4 ... #>   ..$ Sepal.Width : num [1:75] 3 2.8 3 2.9 2.6 2.4 2.4 2.7 2.7 3 ... #>   ..$ Petal.Length: num [1:75] 4.4 4.8 5 4.5 3.5 3.8 3.7 3.9 5.1 4.5 ... #>   ..$ Petal.Width : num [1:75] 1.4 1.4 1.7 1.5 1 1.1 1 1.2 1.6 1.5 ... #>   ..$ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 2 2 2 2 2 2 2 2 2 2 ..."},{"path":"https://mikmart.github.io/mire/reference/decompress.html","id":null,"dir":"Reference","previous_headings":"","what":"Decompress a file or connection — decompress","title":"Decompress a file or connection — decompress","text":"Decompress full contents file (connection) another file (connection). can useful need access compressed file external software support decompression, compatibility function accept connections handle decompression.","code":""},{"path":"https://mikmart.github.io/mire/reference/decompress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decompress a file or connection — decompress","text":"","code":"decompress(file, dest = sub(\"\\\\.(gz|bz2|xz)$\", \"\", file), force = FALSE)"},{"path":"https://mikmart.github.io/mire/reference/decompress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decompress a file or connection — decompress","text":"file Path compressed file, connection. See Details. dest Path destination file, connection. Must given explicitly file path exists. force Set TRUE overwrite file dest, applicable.","code":""},{"path":"https://mikmart.github.io/mire/reference/decompress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decompress a file or connection — decompress","text":"destination dest, invisibly.","code":""},{"path":"https://mikmart.github.io/mire/reference/decompress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decompress a file or connection — decompress","text":"file connection, wrapped gzcon(), automatically opened necessary, always closed (destroyed) afterwards. See underlying gzfile() authoritative list supported compression types. time writing least gzip, bzip2, xz lzma supported. batch size used /O operations can configured setting mire.decompress.batch_size option (bytes). default batch size 50 MiB.","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/decompress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decompress a file or connection — decompress","text":"","code":"decompress(url(\"https://www.stats.ox.ac.uk/pub/datasets/csb/ch12.dat.gz\"), \"ch12.dat\") #> The source `file` connection will be closed and destroyed. #> Decompressing `file` into ch12.dat head(read.table(\"ch12.dat\")) #>     V1 V2 V3 V4 V5 V6 V7 #> 1   37 86  1  0  0  2  0 #> 2   61 77  1  0  0  4  0 #> 3 1084 75  1  0  0  3  1 #> 4 1092 77  1  0  1  2  1 #> 5   23 86  1  0  0  4  0 #> 6 1091 71  1  1  0  3  1 unlink(\"ch12.dat\") # Tidy up"},{"path":"https://mikmart.github.io/mire/reference/let.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate an expression in a modified context — let","title":"Evaluate an expression in a modified context — let","text":"Similar (), interface optimized specifying single values, sequential evaluation, argument order suitable piping. Can used avoid cluttering environment intermediate values, like compact local scope. Inspired let expression Haskell.","code":""},{"path":"https://mikmart.github.io/mire/reference/let.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate an expression in a modified context — let","text":"","code":"let(expr, ...)"},{"path":"https://mikmart.github.io/mire/reference/let.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate an expression in a modified context — let","text":"expr Expression evaluate. input captured evaluation context modified assignments .... ... Name-value pairs assign evaluation context expr. Evaluated sequentially (expr); can refer assignments previous arguments subsequent ones.","code":""},{"path":"https://mikmart.github.io/mire/reference/let.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate an expression in a modified context — let","text":"value evaluating expr modified context.","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/let.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate an expression in a modified context — let","text":"","code":"let(x = 1, x + x) #> [1] 2  # Use earlier assignments let(x = 2, y = x + 3, y * y) #> [1] 25  # The equivalent local scope local({   x <- 2   y <- x + 3   y * y }) #> [1] 25"},{"path":"https://mikmart.github.io/mire/reference/mire-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mire: Mikko's Miscellaneous R Extensions — mire-package","title":"mire: Mikko's Miscellaneous R Extensions — mire-package","text":"Another miscellaneous collection utilities make author's experience using R little bit pleasant.","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/mire-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mire: Mikko's Miscellaneous R Extensions — mire-package","text":"Maintainer: Mikko Marttila mikkmart@protonmail.com","code":""},{"path":"https://mikmart.github.io/mire/reference/permute.html","id":null,"dir":"Reference","previous_headings":"","what":"Permute the order of elements in an object — permute","title":"Permute the order of elements in an object — permute","text":"generic function generate random permutation object. default method equivalent sample(x) without surprises numeric vectors length 1. data.frame method permutes order rows.","code":""},{"path":"https://mikmart.github.io/mire/reference/permute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permute the order of elements in an object — permute","text":"","code":"permute(x, ...)  # S3 method for data.frame permute(x, ...)"},{"path":"https://mikmart.github.io/mire/reference/permute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permute the order of elements in an object — permute","text":"x vector data frame. ... Additional arguments passed methods.","code":""},{"path":"https://mikmart.github.io/mire/reference/permute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permute the order of elements in an object — permute","text":"object x elements permuted random order.","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/permute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permute the order of elements in an object — permute","text":"","code":"permute(1:5) #> [1] 2 3 1 5 4 permute(5) # Compare to sample(5) #> [1] 5  # The data.frame method permutes rows permute(iris) |> head() #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 103          7.1         3.0          5.9         2.1  virginica #> 21           5.4         3.4          1.7         0.2     setosa #> 95           5.6         2.7          4.2         1.3 versicolor #> 142          6.9         3.1          5.1         2.3  virginica #> 112          6.4         2.7          5.3         1.9  virginica #> 147          6.3         2.5          5.0         1.9  virginica"},{"path":"https://mikmart.github.io/mire/reference/replace_if.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace values satisfying a predicate — replace_if","title":"Replace values satisfying a predicate — replace_if","text":"Replace values satisfying predicate","code":""},{"path":"https://mikmart.github.io/mire/reference/replace_if.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace values satisfying a predicate — replace_if","text":"","code":"replace_if(x, f, values)"},{"path":"https://mikmart.github.io/mire/reference/replace_if.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace values satisfying a predicate — replace_if","text":"x vector. f function, called x. return value used select elements x replace values. values Values assigned elements x satisfying f.","code":""},{"path":"https://mikmart.github.io/mire/reference/replace_if.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace values satisfying a predicate — replace_if","text":"vector x elements given f(x) replaced values.","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/replace_if.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace values satisfying a predicate — replace_if","text":"","code":"replace_if(c(1, NA, 3), is.na, 42) #> [1]  1 42  3"},{"path":"https://mikmart.github.io/mire/reference/resample.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample elements from an object with replacement — resample","title":"Sample elements from an object with replacement — resample","text":"generic function draw elements object replacement. default method equivalent sample(x, replace = TRUE) without surprises numeric vectors length 1. data.frame method resamples rows.","code":""},{"path":"https://mikmart.github.io/mire/reference/resample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample elements from an object with replacement — resample","text":"","code":"resample(x, size = length(x), prob = NULL, ...)  # S3 method for data.frame resample(x, size = nrow(x), prob = NULL, ...)"},{"path":"https://mikmart.github.io/mire/reference/resample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample elements from an object with replacement — resample","text":"x vector data frame. size positive integer. number elements sample. prob numeric vector sampling probability weights element x. ... Additional arguments passed methods.","code":""},{"path":"https://mikmart.github.io/mire/reference/resample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample elements from an object with replacement — resample","text":"object size elements drawn x replacement.","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/resample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample elements from an object with replacement — resample","text":"","code":"resample(1:5) #> [1] 5 5 1 5 5 resample(5) # Compare to sample(5, replace = TRUE) #> [1] 5  # The data.frame method samples rows head(iris) |> resample() #>     Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 3            4.7         3.2          1.3         0.2  setosa #> 3.1          4.7         3.2          1.3         0.2  setosa #> 6            5.4         3.9          1.7         0.4  setosa #> 2            4.9         3.0          1.4         0.2  setosa #> 1            5.1         3.5          1.4         0.2  setosa #> 1.1          5.1         3.5          1.4         0.2  setosa"},{"path":"https://mikmart.github.io/mire/reference/trapez.html","id":null,"dir":"Reference","previous_headings":"","what":"Trapezoidal integration — trapez","title":"Trapezoidal integration — trapez","text":"Find area curve sample points trapezoidal rule.","code":""},{"path":"https://mikmart.github.io/mire/reference/trapez.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trapezoidal integration — trapez","text":"","code":"trapez(x, y)"},{"path":"https://mikmart.github.io/mire/reference/trapez.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trapezoidal integration — trapez","text":"x, y Numeric vectors giving coordinates sample points.","code":""},{"path":"https://mikmart.github.io/mire/reference/trapez.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trapezoidal integration — trapez","text":"scalar numeric integral value.","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/trapez.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trapezoidal integration — trapez","text":"","code":"trapez(c(0, 1, 2), c(1, 2, 0)) #> [1] 2.5  # Calculate AUClast for each subject in the Indometh dataset Indometh |> by(~ Subject, with, trapez(c(0, time), c(0, conc))) #> Subject: 1 #> [1] 1.74125 #> ------------------------------------------------------------  #> Subject: 4 #> [1] 2.4775 #> ------------------------------------------------------------  #> Subject: 2 #> [1] 2.9325 #> ------------------------------------------------------------  #> Subject: 5 #> [1] 1.95375 #> ------------------------------------------------------------  #> Subject: 6 #> [1] 2.8725 #> ------------------------------------------------------------  #> Subject: 3 #> [1] 2.93375"},{"path":"https://mikmart.github.io/mire/reference/unfill.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace adjacent repeated elements in a vector — unfill","title":"Replace adjacent repeated elements in a vector — unfill","text":"Replace adjacent repeated elements vector","code":""},{"path":"https://mikmart.github.io/mire/reference/unfill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace adjacent repeated elements in a vector — unfill","text":"","code":"unfill(x, value = NA)"},{"path":"https://mikmart.github.io/mire/reference/unfill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace adjacent repeated elements in a vector — unfill","text":"x vector. value replacement value length 1.","code":""},{"path":"https://mikmart.github.io/mire/reference/unfill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace adjacent repeated elements in a vector — unfill","text":"vector x adjacent repeated elements replaced value.","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/unfill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace adjacent repeated elements in a vector — unfill","text":"","code":"unfill(rep(1:3, 2:4)) #> [1]  1 NA  2 NA NA  3 NA NA NA unfill(rep(c(\"A\", \"B\"), 3:4), \"\") #> [1] \"A\" \"\"  \"\"  \"B\" \"\"  \"\"  \"\""},{"path":"https://mikmart.github.io/mire/reference/uniq.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop adjacent repeated elements from a vector — uniq","title":"Drop adjacent repeated elements from a vector — uniq","text":"Similarly Unix command uniq, filter elements vector preceding value. uniql returns logical vector can used identify .","code":""},{"path":"https://mikmart.github.io/mire/reference/uniq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop adjacent repeated elements from a vector — uniq","text":"","code":"uniq(x)  uniql(x)"},{"path":"https://mikmart.github.io/mire/reference/uniq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop adjacent repeated elements from a vector — uniq","text":"x vector.","code":""},{"path":"https://mikmart.github.io/mire/reference/uniq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop adjacent repeated elements from a vector — uniq","text":"uniq(), vector x adjacent repeated elements removed. uniql(), logical vector length(x).","code":""},{"path":[]},{"path":"https://mikmart.github.io/mire/reference/uniq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop adjacent repeated elements from a vector — uniq","text":"","code":"uniq(c(1, 1, 2, 1)) #> [1] 1 2 1 uniql(c(1, 1, 2, 1)) #> [1]  TRUE FALSE  TRUE  TRUE"},{"path":"https://mikmart.github.io/mire/news/index.html","id":"mire-010-2023-10-29","dir":"Changelog","previous_headings":"","what":"mire 0.1.0 (2023-10-29)","title":"mire 0.1.0 (2023-10-29)","text":"Changed resample() generic function sampling replacement. Added new resample.data.frame() method resampling rows data frames. Added new generic function permute() generating permutations objects. Added new permute.data.frame() method permuting rows data frames. Added new function trapez() trapezoidal integration sample points. Added NEWS.md file track changes package.","code":""}]
